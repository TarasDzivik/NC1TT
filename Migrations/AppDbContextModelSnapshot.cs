// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NC1TestTask.Data;

#nullable disable

namespace NC1TestTask.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NC1TestTask.Data.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Floor")
                        .HasColumnType("smallint")
                        .HasColumnName("Floor");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Department");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Department");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            Floor = (short)-1,
                            Name = "Engenering"
                        },
                        new
                        {
                            DepartmentId = 2,
                            Floor = (short)0,
                            Name = "Human Resources"
                        },
                        new
                        {
                            DepartmentId = 3,
                            Floor = (short)1,
                            Name = "Design Head"
                        });
                });

            modelBuilder.Entity("NC1TestTask.Data.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<byte>("Age")
                        .HasColumnType("tinyint")
                        .HasColumnName("Age");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar")
                        .HasColumnName("Gender");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nVarchar")
                        .HasColumnName("Name");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nVarchar")
                        .HasColumnName("Surname");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Employee");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("NC1TestTask.Data.Entities.JoiningEntities.EmployeeProgLanguage", b =>
                {
                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int>("LenId")
                        .HasColumnType("int");

                    b.HasKey("EmpId", "LenId");

                    b.HasIndex("LenId");

                    b.ToTable("EmployeeProgLanguage");
                });

            modelBuilder.Entity("NC1TestTask.Data.Entities.ProgrammingLanguage", b =>
                {
                    b.Property<int>("PLId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PLId"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("Language");

                    b.HasKey("PLId");

                    b.ToTable("ProgrammingLanguages");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ProgrammingLanguage");

                    b.UseTphMappingStrategy();

                    b.HasData(
                        new
                        {
                            PLId = 1,
                            Name = "C#"
                        },
                        new
                        {
                            PLId = 2,
                            Name = "Java"
                        },
                        new
                        {
                            PLId = 3,
                            Name = "Pyton"
                        },
                        new
                        {
                            PLId = 4,
                            Name = "Scala"
                        },
                        new
                        {
                            PLId = 5,
                            Name = "Java Script"
                        },
                        new
                        {
                            PLId = 6,
                            Name = "C"
                        },
                        new
                        {
                            PLId = 7,
                            Name = "C++"
                        },
                        new
                        {
                            PLId = 8,
                            Name = "PHP"
                        },
                        new
                        {
                            PLId = 9,
                            Name = "Visual Basic"
                        },
                        new
                        {
                            PLId = 10,
                            Name = "Swift"
                        },
                        new
                        {
                            PLId = 11,
                            Name = "NodeJS"
                        });
                });

            modelBuilder.Entity("NC1TestTask.Data.DTOs.DepartmentDto", b =>
                {
                    b.HasBaseType("NC1TestTask.Data.Entities.Department");

                    b.HasDiscriminator().HasValue("DepartmentDto");
                });

            modelBuilder.Entity("NC1TestTask.Data.DTOs.EmployeeDto", b =>
                {
                    b.HasBaseType("NC1TestTask.Data.Entities.Employee");

                    b.Property<int?>("ProgrammingLanguagePLId")
                        .HasColumnType("int");

                    b.HasIndex("ProgrammingLanguagePLId");

                    b.HasDiscriminator().HasValue("EmployeeDto");
                });

            modelBuilder.Entity("NC1TestTask.Data.DTOs.ProgrammingLanguageDto", b =>
                {
                    b.HasBaseType("NC1TestTask.Data.Entities.ProgrammingLanguage");

                    b.HasDiscriminator().HasValue("ProgrammingLanguageDto");
                });

            modelBuilder.Entity("NC1TestTask.Data.Entities.Employee", b =>
                {
                    b.HasOne("NC1TestTask.Data.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("NC1TestTask.Data.Entities.JoiningEntities.EmployeeProgLanguage", b =>
                {
                    b.HasOne("NC1TestTask.Data.Entities.Employee", "Empl")
                        .WithMany("EmloyeeProgLanguages")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NC1TestTask.Data.Entities.ProgrammingLanguage", "PrLanguage")
                        .WithMany("EmployeeProgLanguages")
                        .HasForeignKey("LenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empl");

                    b.Navigation("PrLanguage");
                });

            modelBuilder.Entity("NC1TestTask.Data.DTOs.EmployeeDto", b =>
                {
                    b.HasOne("NC1TestTask.Data.Entities.ProgrammingLanguage", "ProgrammingLanguage")
                        .WithMany()
                        .HasForeignKey("ProgrammingLanguagePLId");

                    b.Navigation("ProgrammingLanguage");
                });

            modelBuilder.Entity("NC1TestTask.Data.Entities.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("NC1TestTask.Data.Entities.Employee", b =>
                {
                    b.Navigation("EmloyeeProgLanguages");
                });

            modelBuilder.Entity("NC1TestTask.Data.Entities.ProgrammingLanguage", b =>
                {
                    b.Navigation("EmployeeProgLanguages");
                });
#pragma warning restore 612, 618
        }
    }
}
